{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/muhammadkararmirza/cpu-vs-gpu?scriptVersionId=180962436\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","execution_count":1,"id":"50a50076","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-06-01T16:41:39.471938Z","iopub.status.busy":"2024-06-01T16:41:39.471655Z","iopub.status.idle":"2024-06-01T16:41:40.281439Z","shell.execute_reply":"2024-06-01T16:41:40.280624Z"},"papermill":{"duration":0.816408,"end_time":"2024-06-01T16:41:40.283707","exception":false,"start_time":"2024-06-01T16:41:39.467299","status":"completed"},"tags":[]},"outputs":[],"source":["\n","\n","import numpy as np \n","import pandas as pd\n","\n","\n","import os\n","for dirname, _, filenames in os.walk('/kaggle/input'):\n","    for filename in filenames:\n","        print(os.path.join(dirname, filename))\n","\n"]},{"cell_type":"code","execution_count":2,"id":"b59bce0d","metadata":{"execution":{"iopub.execute_input":"2024-06-01T16:41:40.291002Z","iopub.status.busy":"2024-06-01T16:41:40.290586Z","iopub.status.idle":"2024-06-01T16:41:44.596655Z","shell.execute_reply":"2024-06-01T16:41:44.595646Z"},"papermill":{"duration":4.312058,"end_time":"2024-06-01T16:41:44.598757","exception":false,"start_time":"2024-06-01T16:41:40.286699","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["You are using cuda device\n"]}],"source":["import torch\n","\n","if torch.cuda.is_available():\n","    device = torch.device(\"cuda\")\n","else:\n","    device = torch.device(\"cpu\")\n","    \n","print(\"You are using\", device, \"device\")"]},{"cell_type":"code","execution_count":3,"id":"a97eb644","metadata":{"execution":{"iopub.execute_input":"2024-06-01T16:41:44.606259Z","iopub.status.busy":"2024-06-01T16:41:44.605388Z","iopub.status.idle":"2024-06-01T16:41:44.636635Z","shell.execute_reply":"2024-06-01T16:41:44.635603Z"},"papermill":{"duration":0.036934,"end_time":"2024-06-01T16:41:44.638603","exception":false,"start_time":"2024-06-01T16:41:44.601669","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Number of CUDA devices: 2\n","CUDA Device 0 - Name: Tesla T4, Memory: 14.75GB\n","CUDA Device 1 - Name: Tesla T4, Memory: 14.75GB\n"]}],"source":["import torch\n","\n","if torch.cuda.is_available():\n","\n","    num_devices = torch.cuda.device_count()\n","    print(f\"Number of CUDA devices: {num_devices}\")\n","\n","\n","    for i in range(num_devices):\n","        device = torch.cuda.get_device_properties(i)\n","        print(f\"CUDA Device {i} - Name: {device.name}, Memory: {device.total_memory / 1024**3:.2f}GB\")\n","else:\n","    print(\"CUDA is not available.\")\n"]},{"cell_type":"code","execution_count":4,"id":"010032f3","metadata":{"execution":{"iopub.execute_input":"2024-06-01T16:41:44.645477Z","iopub.status.busy":"2024-06-01T16:41:44.644858Z","iopub.status.idle":"2024-06-01T16:41:58.929824Z","shell.execute_reply":"2024-06-01T16:41:58.928538Z"},"papermill":{"duration":14.290819,"end_time":"2024-06-01T16:41:58.932219","exception":false,"start_time":"2024-06-01T16:41:44.6414","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["************ CPU SPEED ***************\n","9.510713815689087\n","Device Verfication: cpu\n","************ GPU SPEED ***************\n","0.7694165706634521\n","Device Verification: cuda:0\n","************ GPU SPEED ***************\n","0.6064691543579102\n","Device Verification: cuda:0\n","************ GPU SPEED ***************\n","0.6293368339538574\n","Device Verification: cuda:0\n"]}],"source":["import time\n","\n","matrix_size = 42*256\n","\n","x = torch.randn(matrix_size, matrix_size)\n","y = torch.randn(matrix_size, matrix_size)\n","\n","\n","\n","print(\"************ CPU SPEED ***************\")\n","start = time.time()\n","result = torch.matmul(x,y)\n","print(time.time() - start)\n","print(\"Device Verfication:\", result.device)\n","\n","device = \"cuda\"\n","x_gpu = x.to(device)\n","y_gpu = y.to(device)\n","torch.cuda.synchronize()\n","\n","for i in range(3):\n","    print(\"************ GPU SPEED ***************\")\n","    start = time.time()\n","    result_gpu = torch.matmul(x_gpu,y_gpu)\n","    torch.cuda.synchronize()\n","    print(time.time() - start)\n","    print(\"Device Verification:\", result_gpu.device)"]},{"cell_type":"code","execution_count":5,"id":"d3cd75a9","metadata":{"execution":{"iopub.execute_input":"2024-06-01T16:41:58.940694Z","iopub.status.busy":"2024-06-01T16:41:58.94Z","iopub.status.idle":"2024-06-01T16:42:19.619239Z","shell.execute_reply":"2024-06-01T16:42:19.618169Z"},"papermill":{"duration":20.68614,"end_time":"2024-06-01T16:42:19.62177","exception":false,"start_time":"2024-06-01T16:41:58.93563","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["**** CPU SPEED 1 *****\n","18.23249578475952\n","verify device: cpu\n","**** CPU SPEED 2 *****\n","18.232988119125366\n","verify device: cpu\n"]}],"source":["import time\n","import torch\n","import concurrent.futures\n","\n","\n","matrix_size = 20 * 528\n","\n","# Generate random matrices\n","x = torch.randn(matrix_size, matrix_size)\n","y = torch.randn(matrix_size, matrix_size)\n","\n","def matrix_multiplication(x, y):\n","    start = time.time()\n","    result = torch.matmul(x, y)\n","    duration = time.time() - start\n","    return duration, result\n","\n","\n","with concurrent.futures.ThreadPoolExecutor() as executor:\n","    future1 = executor.submit(matrix_multiplication, x, y)\n","    future2 = executor.submit(matrix_multiplication, x, y)\n","\n","\n","    duration1, result1 = future1.result()\n","    duration2, result2 = future2.result()\n","\n","    print(\"**** CPU SPEED 1 *****\")\n","    print(duration1)\n","    print(\"verify device:\", result1.device)\n","    \n","    print(\"**** CPU SPEED 2 *****\")\n","    print(duration2)\n","    print(\"verify device:\", result2.device)"]},{"cell_type":"markdown","id":"4e2651d5","metadata":{"papermill":{"duration":0.002946,"end_time":"2024-06-01T16:42:19.628443","exception":false,"start_time":"2024-06-01T16:42:19.625497","status":"completed"},"tags":[]},"source":[]}],"metadata":{"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[],"dockerImageVersionId":30699,"isGpuEnabled":true,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.13"},"papermill":{"default_parameters":{},"duration":44.634307,"end_time":"2024-06-01T16:42:21.053533","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-06-01T16:41:36.419226","version":"2.5.0"}},"nbformat":4,"nbformat_minor":5}